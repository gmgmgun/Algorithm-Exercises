"""
-------------------------------------------
[문제 해석]
1. 키 순서대로 일렬로 서있는 사람들을 K개의 조로 나눔
2. 조별로 단체 티셔츠 주문
3. 티셔츠 비용 = 조에서 키가 가장 큰 사람 - 가장 작은 사람의 차이
4. 최소 티셔츠 비용을 구해라

[접근]
1. 키 순으로 서있으니까 따로 정렬할 필요는 없음
2. 배열을 순회하면서 앞뒤 사람의 키 차이를 구함
3. 키 차이를 다시 내림차순 정렬함
4. 앞에서 조 숫자 - 1 만큼을 제외하고 요소를 더함
    - 키 차이가 많이 나는 구간을 기준으로 구분할 거고, 구분점 개수 = 조 숮자 - 1이기 때문
    예시) 사람들의 키가 [2, 4, 5, 8, 10, 13]이고 3조로 나눌 경우
         키 차이 배열은 [2, 1, 3, 2, 3] 이 됨.
         정렬하면 [3, 3, 2, 2, 1]이고 조가 세개니까 [2, 2, 1] 이 됨
         실제 조가 나뉜 모습은 [2, 4, 5], [8, 10], [13]
         실제로 차이가 3이 나는 구간(5와 8 사이, 10과 13 사이)을 기준으로 나눈 거.

[카테고리]
그리디, 정렬
-------------------------------------------
"""

import sys

N, K = map(int, (sys.stdin.readline().split()))
P = list(map(int, (sys.stdin.readline().split())))


def find_min_cost(n, t, p):
    diffs = []

    for i in range(1, n):
        diffs.append(p[i] - p[i-1])

    diffs.sort(reverse=True)
    min_cost = sum(diffs[t - 1:])

    return min_cost


print(find_min_cost(N, K, P))
